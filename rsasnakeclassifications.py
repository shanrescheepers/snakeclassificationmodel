# -*- coding: utf-8 -*-
"""RSASnakeClassifications.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/shanrescheepers/snakeclassificationmodel/blob/master/RSASnakeClassifications.ipynb
"""

!nvidia-smi

"""Install Tensorflow"""

!pip install tensorflow==2.10
import tensorflow as tf

!python --version

#Before changin the runtime type - by default none
tf.config.list_physical_devices()

!pip install ultralytics
from ultralytics import YOLO

"""Installing a YOLO to add dataset to train on my own dataset"""

import os
from IPython.display import display, Image
from IPython import display
display.clear_output()
!yolo mode = yolo checks

"""Train Yolo model on Custom Dataset (the data i made in roboflow)"""

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="<add-yourown-api-key-here")                        # insert api key (create a account at https://universe.roboflow.com/)
project = rf.workspace("shanr-scheepers").project("snake-class")    # workspace and project (see more at https://universe.roboflow.com/shanr-scheepers)
dataset = project.version(1).download("folder")                     # dataset definition
model = project.version(1).model                                    # model definition

"""Place ***YOUR*** images in a /data directory to be used by the model"""

import os

path = os.getcwd() + '/data'
predPath = os.getcwd() + '/prediction'

if(os.path.isdir(predPath) == False):
  os.mkdir(predPath)

# check if dir exists
isdir = os.path.isdir(path)
if (isdir):
  content = os.listdir(path)
  for count, file in enumerate(content, start=1):
    if(os.path.isfile(path + '/' + file)):
      model.predict(path + '/' + file).save(predPath + '/' + file)

"""Display all image prediction in /prediction output

"""

import matplotlib.pyplot as plt
import os

IMAGES_PATH = os.getcwd() + '/prediction'
NUM_EXAMPLES = len(os.listdir(IMAGES_PATH))

example_filenames = os.listdir(IMAGES_PATH)[:NUM_EXAMPLES]
fig, axs = plt.subplots(1, NUM_EXAMPLES, figsize=(10,2))
for i in range(NUM_EXAMPLES):
  axs[i].imshow(plt.imread(os.path.join(IMAGES_PATH, example_filenames[i])))
  axs[i].get_xaxis().set_visible(False)
  axs[i].get_yaxis().set_visible(False)
fig.suptitle(f'Showing {NUM_EXAMPLES} examples for {IMAGES_PATH}')

plt.show()